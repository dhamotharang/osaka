replicaCount: 1

jaeger:
  sidecar: jaeger-dev
  collector_host: dns:///jaeger-dev-collector-headless.observability:14250

image:
  repository: registry.happytravel.com/osaka
  tag: latest
  pullPolicy: Always
imagePullSecrets:
  - name: travel-registry
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: osaka-dev.happytravel.com
      paths:
        - /
  tls:
   - secretName: happytravel-tls
     hosts:
       - osaka-dev.happytravel.com

resources:
  limits:
    cpu: 1
    memory: 768Mi
  requests:
    cpu: 1
    memory: 768Mi

nodeSelector: {}

tolerations: []

affinity: {}

env:
  ASPNETCORE_URLS: http://*:80
  ASPNETCORE_ENVIRONMENT: "Development"
  HTDC_VAULT_ENDPOINT: "https://vault.dev.happytravel.com/v1/"
  HTDC_OSAKA_SENTRY_ENDPOINT: "https://ec380dd22c794e929e1f327b34c3011b@sentry1.happytravel.com/35"
  HTDC_REDIS_HOST: "redis-osaka"
  JAEGER_AGENT_HOST: "localhost"
  JAEGER_AGENT_PORT: "6831"
  CONSUL_HTTP_ADDR: "https://consul-dev.happytravel.com/"
